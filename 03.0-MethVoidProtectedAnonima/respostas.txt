1 - Por que é um método que não tem retorno

2 - 

	private A a

	@before
	public void setUp(){
		a = new A()
	}

	@after
	public void tearDown(){
		a = null
	}

	@test(expected = Exception.class)
	public void test01 {
		a.g(5);
	}

	test(expected = Exception.class)
	public void test02 {
		a.g(15);
	}

3 - Porque o framework JUnit só consegue ter acesso as classes que possuem a mesma estrutura de projeto do pacote que será entregue ao cliente (classes que serão testadas). caso contrário, o JUnit não conseguirá fazer o espelhamento do conteúdo do pacote.
	Neste caso, não foi possível testar o método isPar(), porque o mesmo se encontra em uma estrutrura de desigual a estrutura do teste 

4 - não foi possível executar o teste do método menorTest(), pois o mesmo se encontra dentro de outro pacote, e apesar de sua visibilidade ser protected, a classe A (do pacote aula, visível ao teste do JUnit) não importa "outro.B", não herda a clase B do pacote outro, e não sobrescreve o método menorTest() dentro do corpo da classe A

5
